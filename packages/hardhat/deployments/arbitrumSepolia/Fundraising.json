{
  "address": "0xccA9728291bC98ff4F97EF57Be3466227b0eb06C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stableCoin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        }
      ],
      "name": "CampaignCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "name": "CampaignFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        }
      ],
      "name": "ContributionMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundTokenTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        }
      ],
      "name": "GoalReached",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "campaigns",
      "outputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "ipfs",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "club",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "finalized",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "endCampaign",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkAndFinalizeCampaigns",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_campaignId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "contributionAmount",
          "type": "uint256"
        }
      ],
      "name": "contribute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_ipfs",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_club",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endCampaign",
          "type": "uint256"
        }
      ],
      "name": "createCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_club",
          "type": "string"
        }
      ],
      "name": "getAllCampaignsByClub",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "ipfs",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "club",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "goalAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentAmount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "finalized",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "endCampaign",
              "type": "uint256"
            }
          ],
          "internalType": "struct Fundraising.Campaign[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCampaignCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "test",
          "type": "address"
        }
      ],
      "name": "getFundToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stablecoin",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newStableCoin",
          "type": "address"
        }
      ],
      "name": "switchStableCoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x762991251398d871e8054f4c23a79af89cc574189fd1b1e364602ac4c88752ea",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xccA9728291bC98ff4F97EF57Be3466227b0eb06C",
    "transactionIndex": 1,
    "gasUsed": "2069095",
    "logsBloom": "0x
    "blockHash": "0x80832f6922dcac732e86f51533e29d9642a901551f659b66df9fb150e49eb217",
    "transactionHash": "0x762991251398d871e8054f4c23a79af89cc574189fd1b1e364602ac4c88752ea",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 15119641,
        "transactionHash": "0x762991251398d871e8054f4c23a79af89cc574189fd1b1e364602ac4c88752ea",
        "address": "0x9A3714068E16615072372d803Ae27F3678282E2c",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000cca9728291bc98ff4f97ef57be3466227b0eb06c"
        ],
        "data": "0x00000000000000000000000000000000000000000000d3c21bcecceda1000000",
        "logIndex": 0,
        "blockHash": "0x80832f6922dcac732e86f51533e29d9642a901551f659b66df9fb150e49eb217"
      }
    ],
    "blockNumber": 15119641,
    "cumulativeGasUsed": "2069095",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xDDa0648FA8c9cD593416EC37089C2a2E6060B45c"
  ],
  "numDeployments": 1,
  "solcInputHash": "f9c2016779f09e9b618fa76bb18667ef",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stableCoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"}],\"name\":\"CampaignCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"CampaignFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"}],\"name\":\"ContributionMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundTokenTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"campaigns\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ipfs\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"club\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"finalized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"endCampaign\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkAndFinalizeCampaigns\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contributionAmount\",\"type\":\"uint256\"}],\"name\":\"contribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ipfs\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_club\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endCampaign\",\"type\":\"uint256\"}],\"name\":\"createCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_club\",\"type\":\"string\"}],\"name\":\"getAllCampaignsByClub\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ipfs\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"club\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"finalized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"endCampaign\",\"type\":\"uint256\"}],\"internalType\":\"struct Fundraising.Campaign[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaignCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"test\",\"type\":\"address\"}],\"name\":\"getFundToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablecoin\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newStableCoin\",\"type\":\"address\"}],\"name\":\"switchStableCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundraising.sol\":\"Fundraising\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Fundraising.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract FundToken is ERC20 {\\n    constructor() ERC20(\\\"FundToken\\\", \\\"FTK\\\") {\\n        _mint(msg.sender, 1000000 * (10 ** decimals()));\\n    }\\n}\\n\\ncontract Fundraising {\\n    struct Campaign {\\n        address creator;\\n        string ipfs;\\n        string club;\\n        uint256 goalAmount;\\n        uint256 currentAmount;\\n        bool finalized;\\n        uint256 endCampaign;\\n    }\\n\\n    mapping(uint256 => mapping(address => uint256)) public contributions;\\n    Campaign[] public campaigns;\\n    ERC20 public fundToken;\\n    ERC20 public stablecoin;\\n    address public owner;\\n\\n    event CampaignCreated(uint256 indexed campaignId, address indexed creator, string title, uint256 goalAmount);\\n    event ContributionMade(uint256 indexed campaignId, address indexed contributor);\\n    event CampaignFinalized(uint256 indexed campaignId, address indexed creator, string title, uint256 totalAmount);\\n    event GoalReached(uint256 indexed campaignId);\\n    event FundTokenTransferred(address indexed recipient, uint256 amount);\\n\\n    constructor(address _stableCoin) {\\n        owner = msg.sender;\\n        fundToken = new FundToken();\\n        stablecoin = ERC20(_stableCoin);\\n    }\\n\\n    function createCampaign(string memory _ipfs, string memory _club, uint256 _goalAmount, uint256 _endCampaign) external {\\n        campaigns.push(Campaign({\\n            creator: msg.sender,\\n            ipfs: _ipfs,\\n            club: _club,\\n            goalAmount: _goalAmount,\\n            currentAmount: 0,\\n            finalized: false,\\n            endCampaign: _endCampaign\\n        }));\\n\\n        emit CampaignCreated(campaigns.length - 1, msg.sender, _ipfs, _goalAmount);\\n    }\\n\\n    function contribute(uint256 _campaignId, uint256 contributionAmount) external payable {\\n        require(_campaignId < campaigns.length, \\\"Campaign does not exist\\\");\\n        require(!campaigns[_campaignId].finalized, \\\"Campaign is already finalized\\\");\\n        require(stablecoin.balanceOf(msg.sender) >= contributionAmount, \\\"Insufficient balance\\\");        \\n        require(campaigns[_campaignId].endCampaign < block.timestamp, \\\"The campaign has ended\\\");\\n\\n        require(stablecoin.transferFrom(msg.sender, address(this), contributionAmount), \\\"Stablecoin transfer failed\\\");\\n        campaigns[_campaignId].currentAmount += contributionAmount;\\n        emit ContributionMade(_campaignId, msg.sender);\\n\\n        if (campaigns[_campaignId].currentAmount >= campaigns[_campaignId].goalAmount) {\\n            emit GoalReached(_campaignId);\\n            finalizeCampaign(_campaignId);\\n        }\\n\\n        uint256 fundTokenAmount = contributionAmount / 100 * 20;\\n        require(fundToken.transfer(msg.sender, fundTokenAmount),\\\"FundToken transfer failed\\\");\\n        emit FundTokenTransferred(msg.sender, fundTokenAmount);\\n    }\\n\\n    function finalizeCampaign(uint256 _campaignId) internal {\\n        Campaign memory campaign = campaigns[_campaignId];\\n        require(!campaign.finalized, \\\"Campaign is already finalized\\\");\\n        require(stablecoin.transfer(campaign.creator, campaign.currentAmount), \\\"Stablecoin grant failed\\\");\\n        campaigns[_campaignId].finalized = true;\\n\\n        emit CampaignFinalized(_campaignId, msg.sender, campaign.ipfs, campaign.currentAmount);\\n    }\\n\\n    function getAllCampaignsByClub(string memory _club) external view returns (Campaign[] memory) {\\n        uint256 filteredCount = 0;\\n        for (uint256 i = 0; i < campaigns.length; i++) {\\n            if (keccak256(bytes(campaigns[i].club)) == keccak256(bytes(_club))) {\\n                filteredCount++;\\n            }\\n        }\\n    \\n        Campaign[] memory filteredCampaigns = new Campaign[](filteredCount);\\n        uint256 currentIndex = 0;\\n        for (uint256 i = 0; i < campaigns.length; i++) {\\n            if (keccak256(bytes(campaigns[i].club)) == keccak256(bytes(_club))) {\\n                filteredCampaigns[currentIndex] = campaigns[i];\\n                currentIndex++;\\n            }\\n        }\\n        return filteredCampaigns;\\n    }\\n\\n    function getCampaignCount() external view returns (uint256) {\\n        return campaigns.length;\\n    }\\n\\n    function getFundToken(address test) external view returns (uint256) {\\n        return fundToken.balanceOf(test);\\n    }\\n\\n    function switchStableCoin(address _newStableCoin) public {\\n        require(msg.sender == owner, \\\"Only the owner can change the stable coin\\\");\\n        stablecoin = ERC20(_newStableCoin);\\n    }\\n\\n    function checkAndFinalizeCampaigns() external {\\n        for (uint256 i = 0; i < campaigns.length; i++) {\\n            if (!campaigns[i].finalized && block.timestamp >= campaigns[i].endCampaign) {\\n                finalizeCampaign(i);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x997d015fc9ad4d69d11ed161b37cc5472fa0d72dc73a29643054215647158a50\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101ba57806395f07936146101da5780639623c464146101ef578063a318f2691461020f578063e9cbd8221461022f578063ea8f386a1461024f57600080fd5b8063141961bc146100ac5780631e3cb670146100e85780633d891f591461011557806350adcdb7146101585780636caa9218146101905780638c590917146101a5575b600080fd5b3480156100b857600080fd5b506100cc6100c73660046111fb565b61026f565b6040516100df979695949392919061125a565b60405180910390f35b3480156100f457600080fd5b5061010861010336600461135a565b6103de565b6040516100df9190611397565b34801561012157600080fd5b5061014a610130366004611479565b600060208181529281526040808220909352908152205481565b6040519081526020016100df565b34801561016457600080fd5b50600254610178906001600160a01b031681565b6040516001600160a01b0390911681526020016100df565b34801561019c57600080fd5b5060015461014a565b6101b86101b33660046114a5565b610722565b005b3480156101c657600080fd5b50600454610178906001600160a01b031681565b3480156101e657600080fd5b506101b8610bd0565b3480156101fb57600080fd5b506101b861020a3660046114c7565b610c5b565b34801561021b57600080fd5b506101b861022a3660046114e9565b610ce9565b34801561023b57600080fd5b50600354610178906001600160a01b031681565b34801561025b57600080fd5b5061014a61026a3660046114c7565b610e44565b6001818154811061027f57600080fd5b6000918252602090912060079091020180546001820180546001600160a01b039092169350906102ae9061155d565b80601f01602080910402602001604051908101604052809291908181526020018280546102da9061155d565b80156103275780601f106102fc57610100808354040283529160200191610327565b820191906000526020600020905b81548152906001019060200180831161030a57829003601f168201915b50505050509080600201805461033c9061155d565b80601f01602080910402602001604051908101604052809291908181526020018280546103689061155d565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b5050506003840154600485015460058601546006909601549495919490935060ff909116915087565b60606000805b6001548110156104545783805190602001206001828154811061040957610409611597565b906000526020600020906007020160020160405161042791906115ad565b604051809103902003610442578161043e81611639565b9250505b8061044c81611639565b9150506103e4565b5060008167ffffffffffffffff811115610470576104706112b7565b6040519080825280602002602001820160405280156104ec57816020015b6104d96040518060e0016040528060006001600160a01b0316815260200160608152602001606081526020016000815260200160008152602001600015158152602001600081525090565b81526020019060019003908161048e5790505b5090506000805b6001548110156107185785805190602001206001828154811061051857610518611597565b906000526020600020906007020160020160405161053691906115ad565b604051809103902003610706576001818154811061055657610556611597565b60009182526020918290206040805160e0810190915260079092020180546001600160a01b0316825260018101805492939192918401916105969061155d565b80601f01602080910402602001604051908101604052809291908181526020018280546105c29061155d565b801561060f5780601f106105e45761010080835404028352916020019161060f565b820191906000526020600020905b8154815290600101906020018083116105f257829003601f168201915b505050505081526020016002820180546106289061155d565b80601f01602080910402602001604051908101604052809291908181526020018280546106549061155d565b80156106a15780601f10610676576101008083540402835291602001916106a1565b820191906000526020600020905b81548152906001019060200180831161068457829003601f168201915b50505091835250506003820154602082015260048201546040820152600582015460ff161515606082015260069091015460809091015283518490849081106106ec576106ec611597565b6020026020010181905250818061070290611639565b9250505b8061071081611639565b9150506104f3565b5090949350505050565b60015482106107785760405162461bcd60e51b815260206004820152601760248201527f43616d706169676e20646f6573206e6f7420657869737400000000000000000060448201526064015b60405180910390fd5b6001828154811061078b5761078b611597565b600091825260209091206005600790920201015460ff16156107ef5760405162461bcd60e51b815260206004820152601d60248201527f43616d706169676e20697320616c72656164792066696e616c697a6564000000604482015260640161076f565b6003546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610837573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085b9190611652565b10156108a05760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161076f565b42600183815481106108b4576108b4611597565b9060005260206000209060070201600601541061090c5760405162461bcd60e51b8152602060048201526016602482015275151a194818d85b5c185a59db881a185cc8195b99195960521b604482015260640161076f565b6003546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610963573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610987919061166b565b6109d35760405162461bcd60e51b815260206004820152601a60248201527f537461626c65636f696e207472616e73666572206661696c6564000000000000604482015260640161076f565b80600183815481106109e7576109e7611597565b90600052602060002090600702016004016000828254610a07919061168d565b9091555050604051339083907f307c1c8dcf9e5e0b374f6c475ff7c473dd02a9248096afa14405976e4ea1eb6a90600090a360018281548110610a4c57610a4c611597565b90600052602060002090600702016003015460018381548110610a7157610a71611597565b90600052602060002090600702016004015410610abc5760405182907ffbfd8ab7c24300fa9888cd721c8565a7da56759384781283684dcf7c7c4a846b90600090a2610abc82610eb9565b6000610ac96064836116a0565b610ad49060146116c2565b60025460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610b26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4a919061166b565b610b965760405162461bcd60e51b815260206004820152601960248201527f46756e64546f6b656e207472616e73666572206661696c656400000000000000604482015260640161076f565b60405181815233907fb2dcc2cda2b117a3db32eada3779068fa20eb57bd229145a69e6750088b887349060200160405180910390a2505050565b60005b600154811015610c585760018181548110610bf057610bf0611597565b600091825260209091206005600790920201015460ff16158015610c38575060018181548110610c2257610c22611597565b9060005260206000209060070201600601544210155b15610c4657610c4681610eb9565b80610c5081611639565b915050610bd3565b50565b6004546001600160a01b03163314610cc75760405162461bcd60e51b815260206004820152602960248201527f4f6e6c7920746865206f776e65722063616e206368616e67652074686520737460448201526830b136329031b7b4b760b91b606482015260840161076f565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160e081018252338152602081018681529181018590526060810184905260006080820181905260a0820181905260c08201849052600180548082018255915281517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600790920291820180546001600160a01b0319166001600160a01b0390921691909117815592519192917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf790910190610da89082611728565b5060408201516002820190610dbd9082611728565b50606082015160038201556080820151600482015560a082015160058201805460ff191691151591909117905560c090910151600690910155600180543391610e05916117e8565b7f825fb10f7650ed27414d6f86acdf7d5946927d9b25001f045f1a2435deec02fe8685604051610e369291906117fb565b60405180910390a350505050565b6002546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a0823190602401602060405180830381865afa158015610e8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb39190611652565b92915050565b600060018281548110610ece57610ece611597565b60009182526020918290206040805160e0810190915260079092020180546001600160a01b031682526001810180549293919291840191610f0e9061155d565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3a9061155d565b8015610f875780601f10610f5c57610100808354040283529160200191610f87565b820191906000526020600020905b815481529060010190602001808311610f6a57829003601f168201915b50505050508152602001600282018054610fa09061155d565b80601f0160208091040260200160405190810160405280929190818152602001828054610fcc9061155d565b80156110195780601f10610fee57610100808354040283529160200191611019565b820191906000526020600020905b815481529060010190602001808311610ffc57829003601f168201915b50505091835250506003820154602082015260048201546040820152600582015460ff161515606082015260069091015460809091015260a0810151909150156110a55760405162461bcd60e51b815260206004820152601d60248201527f43616d706169676e20697320616c72656164792066696e616c697a6564000000604482015260640161076f565b6003548151608083015160405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af11580156110ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611123919061166b565b61116f5760405162461bcd60e51b815260206004820152601760248201527f537461626c65636f696e206772616e74206661696c6564000000000000000000604482015260640161076f565b600180838154811061118357611183611597565b906000526020600020906007020160050160006101000a81548160ff021916908315150217905550336001600160a01b0316827f06eff44b8e0fd0aab29b8ab14df9b9e86ec2a9068861c573ec59e362fd246858836020015184608001516040516111ef9291906117fb565b60405180910390a35050565b60006020828403121561120d57600080fd5b5035919050565b6000815180845260005b8181101561123a5760208185018101518683018201520161121e565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038816815260e06020820181905260009061127e90830189611214565b82810360408401526112908189611214565b60608401979097525050608081019390935290151560a083015260c0909101529392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126112de57600080fd5b813567ffffffffffffffff808211156112f9576112f96112b7565b604051601f8301601f19908116603f01168101908282118183101715611321576113216112b7565b8160405283815286602085880101111561133a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561136c57600080fd5b813567ffffffffffffffff81111561138357600080fd5b61138f848285016112cd565b949350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561144f57888303603f19018552815180516001600160a01b031684528781015160e0898601819052906113f782870182611214565b915050878201518582038987015261140f8282611214565b606084810151908801526080808501519088015260a08085015115159088015260c0938401519390960192909252505093860193908601906001016113be565b509098975050505050505050565b80356001600160a01b038116811461147457600080fd5b919050565b6000806040838503121561148c57600080fd5b8235915061149c6020840161145d565b90509250929050565b600080604083850312156114b857600080fd5b50508035926020909101359150565b6000602082840312156114d957600080fd5b6114e28261145d565b9392505050565b600080600080608085870312156114ff57600080fd5b843567ffffffffffffffff8082111561151757600080fd5b611523888389016112cd565b9550602087013591508082111561153957600080fd5b50611546878288016112cd565b949794965050505060408301359260600135919050565b600181811c9082168061157157607f821691505b60208210810361159157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60008083546115bb8161155d565b600182811680156115d357600181146115e857611617565b60ff1984168752821515830287019450611617565b8760005260208060002060005b8581101561160e5781548a8201529084019082016115f5565b50505082870194505b50929695505050505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161164b5761164b611623565b5060010190565b60006020828403121561166457600080fd5b5051919050565b60006020828403121561167d57600080fd5b815180151581146114e257600080fd5b80820180821115610eb357610eb3611623565b6000826116bd57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610eb357610eb3611623565b601f82111561172357600081815260208120601f850160051c810160208610156117005750805b601f850160051c820191505b8181101561171f5782815560010161170c565b5050505b505050565b815167ffffffffffffffff811115611742576117426112b7565b61175681611750845461155d565b846116d9565b602080601f83116001811461178b57600084156117735750858301515b600019600386901b1c1916600185901b17855561171f565b600085815260208120601f198616915b828110156117ba5788860151825594840194600190910190840161179b565b50858210156117d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115610eb357610eb3611623565b60408152600061180e6040830185611214565b9050826020830152939250505056fea2646970667358221220fb8a5a30f98ad7c4e1ba70ab01483fd5c28421c30b91c945b51bb658c03d683264736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 758,
        "contract": "contracts/Fundraising.sol:Fundraising",
        "label": "contributions",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 762,
        "contract": "contracts/Fundraising.sol:Fundraising",
        "label": "campaigns",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Campaign)752_storage)dyn_storage"
      },
      {
        "astId": 765,
        "contract": "contracts/Fundraising.sol:Fundraising",
        "label": "fundToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(ERC20)586"
      },
      {
        "astId": 768,
        "contract": "contracts/Fundraising.sol:Fundraising",
        "label": "stablecoin",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ERC20)586"
      },
      {
        "astId": 770,
        "contract": "contracts/Fundraising.sol:Fundraising",
        "label": "owner",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Campaign)752_storage)dyn_storage": {
        "base": "t_struct(Campaign)752_storage",
        "encoding": "dynamic_array",
        "label": "struct Fundraising.Campaign[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ERC20)586": {
        "encoding": "inplace",
        "label": "contract ERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Campaign)752_storage": {
        "encoding": "inplace",
        "label": "struct Fundraising.Campaign",
        "members": [
          {
            "astId": 739,
            "contract": "contracts/Fundraising.sol:Fundraising",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 741,
            "contract": "contracts/Fundraising.sol:Fundraising",
            "label": "ipfs",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 743,
            "contract": "contracts/Fundraising.sol:Fundraising",
            "label": "club",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 745,
            "contract": "contracts/Fundraising.sol:Fundraising",
            "label": "goalAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 747,
            "contract": "contracts/Fundraising.sol:Fundraising",
            "label": "currentAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 749,
            "contract": "contracts/Fundraising.sol:Fundraising",
            "label": "finalized",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 751,
            "contract": "contracts/Fundraising.sol:Fundraising",
            "label": "endCampaign",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}